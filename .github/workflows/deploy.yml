name: Terraform CI/CD

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: "Terraform Plan and Apply"
    runs-on: ubuntu-latest

    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Terraform Format Check (Lint)
        run: terraform fmt -check -recursive

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Validate
        run: terraform validate

      - name: Run tfsec (Security Scan)
        uses: aquasecurity/tfsec-action@v1.0.0

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -input=false \
            -var="subscription_id=${{ secrets.ARM_SUBSCRIPTION_ID }}" \
            -var="client_id=${{ secrets.ARM_CLIENT_ID }}" \
            -var="client_secret=${{ secrets.ARM_CLIENT_SECRET }}" \
            -var="tenant_id=${{ secrets.ARM_TENANT_ID }}" \
            -out=tfplan

- name: Archive Plan on Failure
  if: failure()
  uses: actions/upload-artifact@v4
  with:
    name: terraform-plan-failure
    path: tfplan

      - name: Terraform Apply (auto-approved)
        if: github.ref == 'refs/heads/main'
        run: |
          terraform apply -auto-approve -input=false \
            -var="subscription_id=${{ secrets.ARM_SUBSCRIPTION_ID }}" \
            -var="client_id=${{ secrets.ARM_CLIENT_ID }}" \
            -var="client_secret=${{ secrets.ARM_CLIENT_SECRET }}" \
            -var="tenant_id=${{ secrets.ARM_TENANT_ID }}"
